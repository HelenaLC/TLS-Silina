[
  {
    "objectID": "00-home.html",
    "href": "00-home.html",
    "title": "TLS",
    "section": "",
    "text": "Contents"
  },
  {
    "objectID": "01-quality.html",
    "href": "01-quality.html",
    "title": "TLS",
    "section": "",
    "text": "Code\nlibrary(edgeR)\nlibrary(scran)\nlibrary(scater)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(SingleCellExperiment)\n\n\n\n\n\n\n\nCode\np <- file.path(\"..\", \"data\", \"GeoMx\")\ny <- read.csv(\n  file.path(p, \"counts.csv\"), \n  row.names = 1, check.names = FALSE)\nrd <- read.csv(\n  file.path(p, \"rowmd.csv\"), \n  row.names = 1, check.names = FALSE)\ncd <- read.csv(\n  file.path(p, \"colmd.csv\"), \n  row.names = 5, check.names = FALSE)\n\n\n\n\n\n\n\nCode\n# fix/simplify sample metadata\nnames(cd)[ncol(cd)] <- \"LOQ\"\nnames(cd) <- gsub(\"_ty\", \"_Ty\", names(cd))\nnames(cd) <- gsub(\"_\", \"\", names(cd))\ncd$TissueSubtype <- gsub(\"TLSep\", \"TLSEp\", cd$TissueSubtype)\n# construct SCE\n(sce <- SingleCellExperiment(\n  list(counts = as.matrix(y)),\n  rowData = rd, colData = cd))\n\n\nclass: SingleCellExperiment \ndim: 18677 380 \nmetadata(0):\nassays(1): counts\nrownames(18677): UBXN6 KTN1 ... CBLN2 ARPC5\nrowData names(12): HUGOSymbol TargetGroup ... NumberOfProbesTotal\n  GeneID\ncolnames(380): LSCC1_20210505 | 001 | immune LSCC1_20210505 | 002 |\n  immune ... RCC2_20210405 | 060 | Geometric Segment RCC2_20210405 |\n  061 | Geometric Segment\ncolData names(34): SlideName ScanLabel ... ScanOffsetY LOQ\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\n\n\n\n\n\n\n\nCode\n# total positive/negative probe counts\nis_np <- rowData(sce)$CodeClass == \"Negative\"\nsce$neg <- colSums(counts(sce[ is_np, ]))\nsce$pos <- colSums(counts(sce[!is_np, ]))\n# drop negative probes & outliers\nsce <- sce[!is_np,\n    sce$RawReads >= 100 &\n    sce$AOINucleiCount >= 5]\n# test whether or not features lie above sample-specific LOQ\nloq <- sweep(assay(sce), 2, sce$LOQ, `>`)\n# keep samples with at least 5% of genes > LOQ\ntable(cs <- colMeans(loq) >= 0.05)\n\n\n\nFALSE  TRUE \n  126   250 \n\n\nCode\n # keep genes > LOQ in at least 10% of samples\ngs <- by(t(loq), sce$TumorType, \\(.)\n    colnames(.)[colMeans(.) >= 0.1])\ngs <- unique(unlist(gs))\ndim(sce <- sce[gs, cs])\n\n\n[1] 3207  250\n\n\nCode\ncd <- data.frame(colData(sce))\n\n\n\n\nCode\nggplot(cd, aes(RawReads, AOINucleiCount, col = SlideName)) +\nggplot(cd, aes(AOISurfaceArea, AOINucleiCount, col = SlideName)) +\n  plot_layout(guides = \"collect\") & \n  scale_x_log10() & scale_y_log10() &\n  geom_point(shape = 16, alpha = 0.5) &\n  guides(color = guide_legend(\n      override.aes = list(size = 3, alpha = 1))) &\n  theme_bw() & theme(aspect.ratio = 1, \n      panel.grid.minor = element_blank(),\n      legend.key.size = unit(0.5, \"lines\")) \n\n\n\n\n\n\n\nCode\nggplot(cd, aes(RawReads, col = SlideName)) +\nggplot(cd, aes(RawReads, col = PatientID)) +\nggplot(cd, aes(RawReads, col = TumorType)) +\nggplot(cd, aes(RawReads, col = TissueType)) &\n  geom_density(key_glyph = \"point\") & \n  guides(color = guide_legend(\n      override.aes = list(size = 3, alpha = 1))) &\n  scale_x_log10() & theme_bw() & theme(\n    aspect.ratio = 1, \n    legend.justification = c(0, 0.5),\n    legend.key.size = unit(0.5, \"lines\")) \n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndgl <- calcNormFactors(sce)\ny <- cpm.DGEList(dgl, log = FALSE)\nz <- cpm.DGEList(dgl, log = TRUE )\nassay(sce, \"normcounts\") <- y\nassay(sce, \"logcounts\" ) <- z\n\n\n\n\n\n\n\nCode\ntbl <- modelGeneVar(sce, block = sce$PatientID)\nrowData(sce)$hvg <- (hvg <- tbl$bio > 0)\n\n\n\n\n\n\n\nCode\nsce <- runPCA(sce, subset_row = hvg)\ndr <- reducedDim(sce)\ncd <- data.frame(cd, dr)\n\n\n\n\n\n\n\n\n\n\nCode\nvar <- c(\n  \"AOINucleiCount\", \"AOISurfaceArea\", \"LOQ\", \n  \"TumorType\", \"TissueType\", \"TissueSubtype\",\n  \"SlideName\", \"PatientID\", \"PatientCategory\") \n(pve <- plotExplanatoryVariables(sce, variables = var))\n\n\n\n\n\n\n\nCode\nggplot(cd, aes(PC1, PC2, col = SlideName)) +\nggplot(cd, aes(PC1, PC2, col = TumorType)) +\nggplot(cd, aes(PC1, PC2, col = TissueType)) &\n  geom_point(shape = 16, alpha = 0.5) &\n  guides(color = guide_legend(\n    ncol = 2, title.position = \"top\",\n    override.aes = list(size = 3, alpha = 1))) &\n  coord_equal() & theme_bw() & theme(\n    legend.position = \"bottom\", \n    legend.justification = \"top\",\n    legend.key.size = unit(0.5, \"lines\")) \n\n\n\n\n\n\n\nCode\nggplot(cd, aes(PC1, PC2, col = RawReads)) +\nggplot(cd, aes(PC1, PC2, col = AOISurfaceArea)) +\nggplot(cd, aes(PC1, PC2, col = AOINucleiCount)) &\n  geom_point(shape = 16, alpha = 0.5) &\n  scale_color_viridis_c(trans = \"log10\") &\n  guides(color = guide_colorbar(title.position = \"top\")) &\n  coord_equal() & theme_bw() & theme(\n    legend.position = \"bottom\", \n    legend.justification = \"top\",\n    legend.key.width = unit(2, \"lines\"),\n    legend.key.height = unit(0.5, \"lines\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\nsaveRDS(sce, file.path(\"..\", \"outs\", \"01-sce.rds\"))\n\n\n\n\n\n\n\n\nSession info\n\n\n\n\n\n\nsessionInfo()\n\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Zurich\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.3.0    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.3.0       htmltools_0.5.5   rstudioapi_0.14   yaml_2.3.7       \n [9] rmarkdown_2.21    knitr_1.42        xfun_0.39         digest_0.6.31    \n[13] jsonlite_1.8.4    rlang_1.1.1       evaluate_0.20"
  }
]